<?php
/**
 * ParticipanteApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketplace
 *
 * API Cloud Loyalty LTM - Webpremios
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Api;

use Swagger\Server\Model\ParticipantResult;
use Swagger\Server\Model\BusinessErrorMessage;
use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Swagger\Server\Model\Participant;
use Swagger\Server\Model\Balance;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
use Swagger\Server\Model\Extract;
use Swagger\Server\Model\ParticipantAdd;
use Symfony\Component\HttpKernel\Exception\UnprocessableEntityHttpException;
use Swagger\Server\Model\Password;
use Swagger\Server\Model\ParticipantUpt;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;

/**
 * ParticipanteApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  Swagger\Server\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
interface ParticipanteApiInterface
{

    /**
     * Sets authentication method access_token
     *
     * @param string $value Value of the access_token authentication method.
     *
     * @return void
     */
    public function setaccess_token($value);

    /**
     * Sets authentication method client_id
     *
     * @param string $value Value of the client_id authentication method.
     *
     * @return void
     */
    public function setclient_id($value);

    /**
     * Operation participantsMeBalanceGet
     *
     * Obtém o saldo do participante
     *
     *
     * @return Balance  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsMeBalanceGet();

    /**
     * Operation participantsMeExtractGet
     *
     * Obtém o extrato do participante
     *
     * @param  string $start_date  Data De (required)
     * @param  string $end_date  Data Até (required)
     * @param  float $_offset  Número da página (required)
     * @param  float $_limit  Número de registros (required)
     *
     * @return Extract[]  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsMeExtractGet($start_date, $end_date, $_offset, $_limit);

    /**
     * Operation participantsMeGet
     *
     * Obtém um participante
     *
     *
     * @return Participant  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsMeGet();

    /**
     * Operation participantsMePasswordPut
     *
     * Altera a senha do participante
     *
     * @param  Password $password   (required)
     *
     * @return void  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsMePasswordPut(Password $password);

    /**
     * Operation participantsMePut
     *
     * Altera um participante
     *
     * @param  ParticipantUpt $participant   (optional)
     *
     * @return void  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsMePut(ParticipantUpt $participant = null);

    /**
     * Operation participantsPost
     *
     * Cria um novo participante
     *
     * @param  ParticipantAdd $participant   (required)
     *
     * @return ParticipantResult  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsPost(ParticipantAdd $participant);

    /**
     * Operation participantsUsernamePasswordResetPost
     *
     * Reseta a senha do participante
     *
     * @param  string $username  Username do participante (required)
     * @param  string $campaign_url  URL da campanha (required)
     *
     * @return void  Operação realizada com sucesso.
     *
     * @throws BadRequestHttpException  Requisição mal formada.
     * @throws UnauthorizedHttpException  Requisição requer autenticação.
     * @throws AccessDeniedHttpException  O acesso ao recurso foi negado.
     * @throws NotFoundHttpException  Recurso não encontrado.
     * @throws UnprocessableEntityHttpException  Requisição não processável.
     * @return void  Erro Interno.
     *
     */
    public function participantsUsernamePasswordResetPost($username, $campaign_url);
}
