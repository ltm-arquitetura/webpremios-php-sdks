<?php
/**
 * Balance
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketplace
 *
 * API Cloud Loyalty LTM - Webpremios
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Model;

use \ArrayAccess;

/**
 * Class representing the Balance model.
 *
 * 
 *
 * @package Swagger\Server\Model
 * @author  Swagger Codegen team
 */
class Balance implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $_name = 'balance';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var array[]
      */
    protected static $_attributes = [
        'points_value' => ['pointsValue', 'float', 'decimal', 'setPointsValue', 'getPointsValue'],
        'points_value_onhold' => ['pointsValueOnhold', 'float', 'decimal', 'setPointsValueOnhold', 'getPointsValueOnhold'],
        'total_points_value' => ['totalPointsValue', 'float', 'decimal', 'setTotalPointsValue', 'getTotalPointsValue'],
        'total_credit_points_value' => ['totalCreditPointsValue', 'float', 'decimal', 'setTotalCreditPointsValue', 'getTotalCreditPointsValue'],
        'total_debit_points_value' => ['totalDebitPointsValue', 'float', 'decimal', 'setTotalDebitPointsValue', 'getTotalDebitPointsValue'],
    ];
    

    
    /**
     * Saldo de pontos
     *
     * @var float|null
     */
    protected $points_value;

    /**
     * Saldo de pontos bloqueados
     *
     * @var float|null
     */
    protected $points_value_onhold;

    /**
     * Saldo de pontos + pontos bloqueados
     *
     * @var float|null
     */
    protected $total_points_value;

    /**
     * Total de créditos em pontos
     *
     * @var float|null
     */
    protected $total_credit_points_value;

    /**
     * Total de débitos em pontos
     *
     * @var float|null
     */
    protected $total_debit_points_value;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->points_value = isset($data['points_value']) ? $data['points_value'] : null;
        $this->points_value_onhold = isset($data['points_value_onhold']) ? $data['points_value_onhold'] : null;
        $this->total_points_value = isset($data['total_points_value']) ? $data['total_points_value'] : null;
        $this->total_credit_points_value = isset($data['total_credit_points_value']) ? $data['total_credit_points_value'] : null;
        $this->total_debit_points_value = isset($data['total_debit_points_value']) ? $data['total_debit_points_value'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function modelName() {
        return self::$_name;
    }

    /**
     * Array of property to mappings.
     *
     * @return array[]
     */
    public function modelAttributes() {
        
        return self::$_attributes;
    }

    /**
     * Validate all the properties in the model
     *
     * Return true if all passed.
     *
     * @return bool True if all properties are valid
     */
    public function isValid()
    {
        return true;
    }


    /**
     * Gets points_value.
     *
     * @return float|null
     */
    public function getPointsValue()
    {
        return $this->points_value;
    }

    /**
     * Sets points_value.
     *
     * @param float|null $points_value  Saldo de pontos
     *
     * @return $this
     */
    public function setPointsValue($points_value = null)
    {
        $this->points_value = $points_value;

        return $this;
    }

    /**
     * Gets points_value_onhold.
     *
     * @return float|null
     */
    public function getPointsValueOnhold()
    {
        return $this->points_value_onhold;
    }

    /**
     * Sets points_value_onhold.
     *
     * @param float|null $points_value_onhold  Saldo de pontos bloqueados
     *
     * @return $this
     */
    public function setPointsValueOnhold($points_value_onhold = null)
    {
        $this->points_value_onhold = $points_value_onhold;

        return $this;
    }

    /**
     * Gets total_points_value.
     *
     * @return float|null
     */
    public function getTotalPointsValue()
    {
        return $this->total_points_value;
    }

    /**
     * Sets total_points_value.
     *
     * @param float|null $total_points_value  Saldo de pontos + pontos bloqueados
     *
     * @return $this
     */
    public function setTotalPointsValue($total_points_value = null)
    {
        $this->total_points_value = $total_points_value;

        return $this;
    }

    /**
     * Gets total_credit_points_value.
     *
     * @return float|null
     */
    public function getTotalCreditPointsValue()
    {
        return $this->total_credit_points_value;
    }

    /**
     * Sets total_credit_points_value.
     *
     * @param float|null $total_credit_points_value  Total de créditos em pontos
     *
     * @return $this
     */
    public function setTotalCreditPointsValue($total_credit_points_value = null)
    {
        $this->total_credit_points_value = $total_credit_points_value;

        return $this;
    }

    /**
     * Gets total_debit_points_value.
     *
     * @return float|null
     */
    public function getTotalDebitPointsValue()
    {
        return $this->total_debit_points_value;
    }

    /**
     * Sets total_debit_points_value.
     *
     * @param float|null $total_debit_points_value  Total de débitos em pontos
     *
     * @return $this
     */
    public function setTotalDebitPointsValue($total_debit_points_value = null)
    {
        $this->total_debit_points_value = $total_debit_points_value;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->$offset) ? $this->$offset : null;
    }

    /**
     * Sets value based on offset.
     * @param  string  $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        $this->$offset = null;
    }
}


