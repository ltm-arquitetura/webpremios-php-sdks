<?php
/**
 * Items
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Marketplace
 *
 * API Cloud Loyalty LTM - Webpremios
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Model;

use \ArrayAccess;

/**
 * Class representing the Items model.
 *
 * 
 *
 * @package Swagger\Server\Model
 * @author  Swagger Codegen team
 */
class Items implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $_name = 'items';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var array[]
      */
    protected static $_attributes = [
        'id' => ['id', 'string', null, 'setId', 'getId'],
        'product_id' => ['productId', 'string', null, 'setProductId', 'getProductId'],
        'name' => ['name', 'string', null, 'setName', 'getName'],
        'image_url' => ['imageUrl', 'string', null, 'setImageUrl', 'getImageUrl'],
        'value_points' => ['valuePoints', 'string', null, 'setValuePoints', 'getValuePoints'],
        'quantity' => ['quantity', 'string', null, 'setQuantity', 'getQuantity'],
        'shipping_estimate' => ['shippingEstimate', 'string', null, 'setShippingEstimate', 'getShippingEstimate'],
    ];
    

    
    /**
     * Identificador do item
     *
     * @var string|null
     */
    protected $id;

    /**
     * Identificador do produto
     *
     * @var string|null
     */
    protected $product_id;

    /**
     * Nome do produto
     *
     * @var string|null
     */
    protected $name;

    /**
     * Url da foto do produto
     *
     * @var string|null
     */
    protected $image_url;

    /**
     * Valor do produto, em pontos
     *
     * @var string|null
     */
    protected $value_points;

    /**
     * Quantidade
     *
     * @var string|null
     */
    protected $quantity;

    /**
     * Data estimada de entrega
     *
     * @var string|null
     */
    protected $shipping_estimate;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->id = isset($data['id']) ? $data['id'] : null;
        $this->product_id = isset($data['product_id']) ? $data['product_id'] : null;
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->image_url = isset($data['image_url']) ? $data['image_url'] : null;
        $this->value_points = isset($data['value_points']) ? $data['value_points'] : null;
        $this->quantity = isset($data['quantity']) ? $data['quantity'] : null;
        $this->shipping_estimate = isset($data['shipping_estimate']) ? $data['shipping_estimate'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function modelName() {
        return self::$_name;
    }

    /**
     * Array of property to mappings.
     *
     * @return array[]
     */
    public function modelAttributes() {
        
        return self::$_attributes;
    }

    /**
     * Validate all the properties in the model
     *
     * Return true if all passed.
     *
     * @return bool True if all properties are valid
     */
    public function isValid()
    {
        return true;
    }


    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id.
     *
     * @param string|null $id  Identificador do item
     *
     * @return $this
     */
    public function setId($id = null)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Gets product_id.
     *
     * @return string|null
     */
    public function getProductId()
    {
        return $this->product_id;
    }

    /**
     * Sets product_id.
     *
     * @param string|null $product_id  Identificador do produto
     *
     * @return $this
     */
    public function setProductId($product_id = null)
    {
        $this->product_id = $product_id;

        return $this;
    }

    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name  Nome do produto
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets image_url.
     *
     * @return string|null
     */
    public function getImageUrl()
    {
        return $this->image_url;
    }

    /**
     * Sets image_url.
     *
     * @param string|null $image_url  Url da foto do produto
     *
     * @return $this
     */
    public function setImageUrl($image_url = null)
    {
        $this->image_url = $image_url;

        return $this;
    }

    /**
     * Gets value_points.
     *
     * @return string|null
     */
    public function getValuePoints()
    {
        return $this->value_points;
    }

    /**
     * Sets value_points.
     *
     * @param string|null $value_points  Valor do produto, em pontos
     *
     * @return $this
     */
    public function setValuePoints($value_points = null)
    {
        $this->value_points = $value_points;

        return $this;
    }

    /**
     * Gets quantity.
     *
     * @return string|null
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * Sets quantity.
     *
     * @param string|null $quantity  Quantidade
     *
     * @return $this
     */
    public function setQuantity($quantity = null)
    {
        $this->quantity = $quantity;

        return $this;
    }

    /**
     * Gets shipping_estimate.
     *
     * @return string|null
     */
    public function getShippingEstimate()
    {
        return $this->shipping_estimate;
    }

    /**
     * Sets shipping_estimate.
     *
     * @param string|null $shipping_estimate  Data estimada de entrega
     *
     * @return $this
     */
    public function setShippingEstimate($shipping_estimate = null)
    {
        $this->shipping_estimate = $shipping_estimate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->$offset) ? $this->$offset : null;
    }

    /**
     * Sets value based on offset.
     * @param  string  $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        $this->$offset = null;
    }
}


